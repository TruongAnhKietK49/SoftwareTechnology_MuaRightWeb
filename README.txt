ü§ñC√°c g√≥i g·∫ßn t·∫£i
D·ª± √°n d√πng HTML, CSS, BOOTSTRAP v√† x·ª≠ l√Ω backend b·∫±ng Node.JS + Express
C√†i NodeJS (n·∫øu ch∆∞a c√≥)
Clone code t·ª´ Repository
C√†i package.json (l·ªánh npm init -y)
Ti·∫øp t·ª•c c√†i "npm install express mssql cors"
Ki·ªÉm tra b·∫±ng l·ªánh npm list express mssql cors

üéÉC·∫•u h√¨nh config
Ti·∫øn h√†nh ch·∫°y 'WebDatabase.sql' c√≥ trong public/DATA (Ch·∫°y b·∫±ng SQL Server Management ho·∫∑c mssql c·ªßa VS Code)
  ‚è©Create t·∫•t c·∫£ c√°c b·∫£ng
V√†o SQL Server Management Studio 2022 >> Security >> Login >> Ch·ªçn t√†i kho·∫£n sa.
-> Xem c·∫•u h√¨nh config trong 'config.js' ·ªü m·ª•c sql-backend/routes
C·∫•p quy·ªÅn WebDB cho t√†i kho·∫£n sa, m·∫≠t kh·∫©u ƒë·∫∑t '123'

üì¨C√°ch ch·∫°y project
Ch·∫°y 'databasePrototype.js' trong folder sql-backend (ƒë·ªÉ t·∫°o d·ª± li·ªáu m·∫´u)
Ch·∫°y file server.js trong sql-backend ƒë·ªÉ RUN server
=>Th√¥ng b√°o k·∫øt n·ªëi th√†nh c√¥ng l√† ƒë∆∞·ª£c!
C√≥ th·ªÉ s·ª≠ d·ª•ng web b√¨nh th∆∞·ªùng r·ªìi..!
<script>
    // ‚úÖ C·∫§U H√åNH API
    const API_BASE = 'http://localhost:3000/api/shipper'; 
    const LOGOUT_REDIRECT_URL = '../../template/pages/signIn_page.html'; // Ki·ªÉm tra ƒë∆∞·ªùng d·∫´n n√†y!
    
    // ‚úÖ H√ÄM GET SHIPPER ID
    function getShipperId() {
        const raw = localStorage.getItem('account');
        if (!raw) return null;
        try {
            const acc = JSON.parse(raw);
            const id = Number(acc?.AccountId ?? acc?.ShipperId); 
            return Number.isFinite(id) && id > 0 ? id : null;
        } catch { return null; }
    }
    const shipperId = getShipperId();
    if (!shipperId) {
        // N·∫øu kh√¥ng c√≥ ID, chuy·ªÉn h∆∞·ªõng v·ªÅ ƒëƒÉng nh·∫≠p
        location.href = LOGOUT_REDIRECT_URL; 
    }

    // ‚úÖ H√ÄM X√ÅC ƒê·ªäNH ICON PH∆Ø∆†NG TI·ªÜN (Copy t·ª´ profileShipper.js)
    function vehicleIconClass(v) {
        const s = (v || '').toLowerCase();
        if (s.includes('√¥ t√¥') || s.includes('car')) return 'bi bi-car-front-fill text-danger';
        if (s.includes('t·∫£i') || s.includes('truck')) return 'bi bi-truck-front-fill text-warning';
        return 'bi bi-motorcycle text-info';
    }

    // ‚úÖ H√ÄM G·ªåI API L·∫§Y PROFILE
    async function httpGetProfile() {
        const res = await fetch(`${API_BASE}/profile/${shipperId}`);
        const json = await res.json();
        if (!res.ok || !json?.success) throw new Error(json?.message || res.statusText);
        return json.profile;
    }

    // ‚úÖ H√ÄM RENDER PROFILE L√äN HEADER
    function renderHeader(p) {
        const navName = document.getElementById('nav-shipper-name');
        const navAvatar = document.getElementById('nav-shipper-avatar');
        const vehicleIcon = document.getElementById('vehicle-icon-nav');
        
        // C·∫≠p nh·∫≠t T√™n, Avatar
        if (navName) navName.textContent = `Hi, ${p.FullName || p.Username || '‚Äî'}`;
        if (navAvatar) navAvatar.src = p.ImageUrl || '../../img/image 11.png';
        
        // C·∫≠p nh·∫≠t ICON PH∆Ø∆†NG TI·ªÜN
        if (vehicleIcon) vehicleIcon.innerHTML = `<i class="${vehicleIconClass(p.VehicleInfo)}" style="font-size:1.5rem"></i>`;
    }

    // ‚úÖ LOGIC CH√çNH: CH·∫†Y KHI T·∫¢I TRANG
    document.addEventListener('DOMContentLoaded', async () => {
        try {
            const profile = await httpGetProfile();
            renderHeader(profile);
            
            // LOGIC CHO N√öT ƒêƒÇNG XU·∫§T
            const btnLogout = document.getElementById('logout-btn');
            if (btnLogout) {
                btnLogout.addEventListener('click', async () => {
                    // G·ªçi API logout (tu·ª≥ ch·ªçn, ch·ªâ c·∫ßn cho session/token)
                    fetch(`${API_BASE}/logout`, { method: 'POST' }).catch(() => {});
                    
                    // X√≥a localStorage v√† chuy·ªÉn h∆∞·ªõng
                    localStorage.removeItem('account'); // X√≥a key ch√≠nh
                    
                    // X√≥a c√°c key kh√°c (n·∫øu c√≥, gi·ªëng logic trong profileShipper.js)
                    ['shipperToken','shipperId','shipperUsername','shipperFullName','shipperEmail','shipperAvatar']
                        .forEach(k => localStorage.removeItem(k));
                    
                    setTimeout(() => location.href = LOGOUT_REDIRECT_URL, 100); 
                });
            }
        } catch (e) {
            console.error('L·ªói t·∫£i header/profile:', e);
            // N·∫øu l·ªói n·∫∑ng (401/404), c√≥ th·ªÉ chuy·ªÉn h∆∞·ªõng v·ªÅ ƒëƒÉng nh·∫≠p
        }
    });
</script>

