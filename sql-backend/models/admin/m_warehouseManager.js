const { getPool, closePool } = require("../../routes/config");

const getProducts = async () => {
  try {
    const pool = await getPool();
    const result = await pool.request().query(`
      SELECT 
          p.*,
          a.Username AS SellerName,
          ISNULL(AVG(r.Rating), 0) AS AverageRating,      -- ‚≠ê Trung b√¨nh sao
          COUNT(r.ReviewId) AS TotalReviews               -- üî¢ T·ªïng s·ªë ƒë√°nh gi√°
      FROM Product AS p
      JOIN Account AS a ON p.SellerId = a.AccountId
      LEFT JOIN Review AS r ON p.ProductId = r.ProductId
      GROUP BY 
          p.ProductId, p.SellerId, p.NameProduct, p.Category, 
          p.Quantity, p.Price, p.Description, p.Warranty, 
          p.ImageUrl, p.TagName, p.Brand, p.CreatedAt, 
          a.Username
      ORDER BY p.CreatedAt DESC
    `);
    return result.recordset;
  } catch (err) {
    console.error("‚ùå L·ªói khi l·∫•y danh s√°ch s·∫£n ph·∫©m:", err);
    return [];
  }
};

// üß© H√†m x√≥a s·∫£n ph·∫©m an to√†n (x·ª≠ l√Ω kh√≥a ngo·∫°i)
async function removeProduct(productId) {
  const pool = await getPool();

  await pool.request().query(`
    BEGIN TRANSACTION;

    -- 1Ô∏è‚É£ X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
    DELETE FROM Basket WHERE ProductId = ${productId};

    -- 2Ô∏è‚É£ X√≥a review li√™n quan
    DELETE FROM Review WHERE ProductId = ${productId};

    -- 3Ô∏è‚É£ X√≥a c√°c d√≤ng order ch·ª©a s·∫£n ph·∫©m n√†y
    DELETE FROM OrderItem WHERE ProductId = ${productId};

    -- 4Ô∏è‚É£ Cu·ªëi c√πng x√≥a s·∫£n ph·∫©m
    DELETE FROM Product WHERE ProductId = ${productId};

    COMMIT TRANSACTION;
  `);
}

module.exports = { getProducts, removeProduct };
