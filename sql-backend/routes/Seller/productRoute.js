const express = require("express");
const router = express.Router();
const fs = require("fs");
const path = require("path");

const pendingPath = path.join(
  __dirname,
  "../../../public/DATA/pendingProducts.json"
);

// üì• POST: seller g·ª≠i s·∫£n ph·∫©m pending
router.post("/pendingProducts", async (req, res) => {
  try {
    const newProducts = req.body; // m·∫£ng s·∫£n ph·∫©m
    // ƒê·ªçc file c≈©
    let currentData = [];
    if (fs.existsSync(pendingPath)) {
      const raw = fs.readFileSync(pendingPath, "utf8");
      if (raw.trim() !== "") currentData = JSON.parse(raw);
    }

    // G·ªôp d·ªØ li·ªáu m·ªõi v√†o file c≈©
    const updated = [...currentData, ...newProducts];

    fs.writeFileSync(pendingPath, JSON.stringify(updated, null, 2), "utf8");

    res
      .status(200)
      .json({ message: "ƒê√£ th√™m s·∫£n ph·∫©m v√†o danh s√°ch ch·ªù duy·ªát" });
  } catch (error) {
    console.error("‚ùå L·ªói khi th√™m s·∫£n ph·∫©m ch·ªù duy·ªát:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
});

// üì§ GET: adminProduct.html l·∫•y danh s√°ch pending
router.get("/pendingProducts", (req, res) => {
  try {
    if (!fs.existsSync(pendingPath)) return res.json([]);

    const data = JSON.parse(fs.readFileSync(pendingPath, "utf8"));
    res.json(data);
  } catch (error) {
    console.error("‚ùå L·ªói khi ƒë·ªçc pendingProducts:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
});

module.exports = router;