// Load d·ªØ li·ªáu th·ªëng k√™
// H√†m t·∫£i d·ªØ li·ªáu th·ªëng k√™ v√† hi·ªÉn th·ªã l√™n dashboard
async function loadingStatistics() {
  try {
    const res = await fetch("http://localhost:3000/admin/dashboard/statistics");
    if (!res.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu th·ªëng k√™");
    const data = await res.json();
    console.log("üìä D·ªØ li·ªáu th·ªëng k√™:", data);

    // G·ªçi h√†m hi·ªÉn th·ªã
    renderStatistics(data);
  } catch (error) {
    console.error("L·ªói khi t·∫£i th·ªëng k√™:", error);
  }
}

// H√†m hi·ªÉn th·ªã d·ªØ li·ªáu v√†o giao di·ªán
function renderStatistics(data) {
  const formatCurrency = (num) =>
    num.toLocaleString("vi-VN", { style: "currency", currency: "VND" });

  document.getElementById("totalOrders").textContent =
    data.orderProduct.length || 0;
  document.getElementById("totalRevenue").textContent = formatCurrency(
    data.revenue || 0
  );
  document.getElementById("totalUsers").textContent = data.accounts.length || 0;
  document.getElementById("totalProducts").textContent =
    data.products.length || 0;
}

// L·∫•y d·ªØ li·ªáu t·∫°o voucher
document
  .getElementById("createVoucherForm")
  .addEventListener("submit", async (e) => {
    e.preventDefault();

    const voucher = {
      Code: document.getElementById("voucherCode").value.trim(),
      CreatedByAdmin: document.getElementById("username").innerText,
      DiscountType: document.getElementById("discountType").value,
      DiscountVal: parseFloat(document.getElementById("discountVal").value),
      MinOrderAmt: parseFloat(document.getElementById("minOrderAmt").value),
      ValidFrom: document.getElementById("validFrom").value,
      ValidTo: document.getElementById("validTo").value,
    };
    console.log(voucher);

    try {
      const res = await fetch(
        "http://localhost:3000/admin/dashboard/vouchers",
        {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(voucher),
        }
      );

      if (!res.ok) throw new Error("T·∫°o voucher th·∫•t b·∫°i");

      alert("üéâ Voucher ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!");
      e.target.reset();
    } catch (err) {
      console.error(err);
      alert("‚ùå C√≥ l·ªói x·∫£y ra khi t·∫°o voucher.");
    }
  });

// üìä T·∫£i d·ªØ li·ªáu v√† v·∫Ω bi·ªÉu ƒë·ªì doanh thu theo th√°ng
async function loadRevenueChart() {
  try {
    const res = await fetch("http://localhost:3000/admin/dashboard/revenue");
    const data = await res.json();

    // Chuy·ªÉn d·ªØ li·ªáu th√†nh m·∫£ng cho bi·ªÉu ƒë·ªì
    const labels = data.map((item) => `Th√°ng ${item.Month}/${item.Year}`);
    const revenues = data.map((item) => item.Revenue);

    // N·∫øu ƒë√£ c√≥ bi·ªÉu ƒë·ªì tr∆∞·ªõc ƒë√≥, h·ªßy tr∆∞·ªõc khi v·∫Ω m·ªõi
    if (
      window.revenueChart &&
      typeof window.revenueChart.destroy === "function"
    ) {
      window.revenueChart.destroy();
    }

    const ctx = document.getElementById("revenueChart").getContext("2d");
    window.revenueChart = new Chart(ctx, {
      type: "bar",
      data: {
        labels,
        datasets: [
          {
            label: "Doanh thu (VNƒê)",
            data: revenues,
            backgroundColor: "rgba(54, 162, 235, 0.6)",
            borderColor: "rgba(54, 162, 235, 1)",
            borderWidth: 1,
          },
        ],
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              callback: function (value) {
                return value.toLocaleString("vi-VN") + " ‚Ç´";
              },
            },
          },
        },
        plugins: {
          legend: { display: false },
          tooltip: {
            callbacks: {
              label: function (ctx) {
                return ctx.formattedValue + " ‚Ç´";
              },
            },
          },
        },
      },
    });
  } catch (err) {
    console.error("L·ªói khi t·∫£i bi·ªÉu ƒë·ªì doanh thu:", err);
  }
}

async function loadRecentActivities() {
  try {
    const res = await fetch("http://localhost:3000/admin/recent-activity");
    if (!res.ok) throw new Error("L·ªói t·∫£i ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y");
    const activities = await res.json();

    const container = document.querySelector(".activity-list");
    container.innerHTML = "";

    activities.forEach((act) => {
      const html = `
        <div class="activity-item">
          <div class="activity-icon ${act.Color}">
            <i class="${act.Icon}"></i>
          </div>
          <div class="activity-content">
            <div class="activity-title">${act.Title}</div>
            <div class="activity-time">${timeAgo(new Date(act.Time))}</div>
          </div>
        </div>
      `;
      container.insertAdjacentHTML("beforeend", html);
    });
  } catch (err) {
    console.error("‚ùå L·ªói load ho·∫°t ƒë·ªông:", err);
  }
}

// üïì H√†m hi·ªÉn th·ªã "x ph√∫t tr∆∞·ªõc"
function timeAgo(time) {
  const diff = Math.floor((Date.now() - time.getTime()) / 60000);
  if (diff < 1) return "V·ª´a xong";
  if (diff < 60) return `${diff} ph√∫t tr∆∞·ªõc`;
  const hours = Math.floor(diff / 60);
  if (hours < 24) return `${hours} gi·ªù tr∆∞·ªõc`;
  const days = Math.floor(hours / 24);
  return `${days} ng√†y tr∆∞·ªõc`;
}

async function loadTopProducts() {
  try {
    const res = await fetch("http://localhost:3000/admin/top-products");
    const data = await res.json();

    const tbody = document.querySelector("#topProductsTable");
    tbody.innerHTML = "";

    data.forEach((item) => {
      const tr = document.createElement("tr");
      tr.innerHTML = `
        <td>
          <div class="d-flex align-items-center">
            <img src="${item.ImageUrl}" class="rounded me-3"
                alt="${item.NameProduct}" style="width: 40px; height: 40px; object-fit: cover;">
            <div>
              <div class="fw-semibold">${item.NameProduct}</div>
              <small class="text-muted">${item.Category}</small>
            </div>
          </div>
        </td>
        <td class="text-center">${item.TotalSold}</td>
        <td class="text-end">${item.Revenue.toLocaleString("vi-VN")}‚Ç´</td>
      `;
      tbody.appendChild(tr);
    });
  } catch (err) {
    console.error("L·ªói khi t·∫£i top s·∫£n ph·∫©m:", err);
  }
}

document.addEventListener(
  "DOMContentLoaded",
  () => loadingStatistics(),
  loadRevenueChart(),
  loadRecentActivities(),
  loadTopProducts()
);
